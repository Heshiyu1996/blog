(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{543:function(e,t,v){e.exports=v.p+"assets/img/img-1.b3251a15.png"},739:function(e,t,v){"use strict";v.r(t);var _=v(56),l=Object(_.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),_("p",[e._v("首先，从"),_("code",[e._v("new Vue()")]),e._v("开始")]),e._v(" "),_("ul",[_("li",[e._v("初始化生命周期、事件系统")]),e._v(" "),_("li",[_("code",[e._v("beforeCreate")])]),e._v(" "),_("li",[e._v("初始化State（props、data、computed...）、watcher")]),e._v(" "),_("li",[_("code",[e._v("Created")])]),e._v(" "),_("li",[e._v("有el选项吗？\n"),_("ul",[_("li",[e._v("没有的话，等待 "),_("strong",[e._v("vm.$mount(el)")]),e._v(" 被执行时，才开始编译")])])]),e._v(" "),_("li",[e._v("有template选项吗？\n"),_("ul",[_("li",[e._v("有，将template编译到render函数")]),e._v(" "),_("li",[e._v("没有，将el的outerHTML整个内容作为template，编译到render函数")])])]),e._v(" "),_("li",[_("code",[e._v("beforeMount")]),e._v("（此时已准备好render函数了）")]),e._v(" "),_("li",[e._v("将render函数返回的VNode树渲染到真实DOM上")]),e._v(" "),_("li",[_("code",[e._v("mounted")]),e._v("（挂载成功！）")])]),e._v(" "),_("hr"),e._v(" "),_("ul",[_("li",[e._v("当data发生变化（未重绘）")]),e._v(" "),_("li",[_("code",[e._v("beforeUpdate")])]),e._v(" "),_("li",[e._v("执行diff算法，更新虚拟DOM，并将变化的部分patch到真实DOM")]),e._v(" "),_("li",[_("code",[e._v("updated")])])]),e._v(" "),_("hr"),e._v(" "),_("ul",[_("li",[e._v("当调用vm.$destroy()时")]),e._v(" "),_("li",[_("code",[e._v("beforeDestroy")])]),e._v(" "),_("li",[e._v("摧毁子组件、事件绑定、数据监听")]),e._v(" "),_("li",[_("code",[e._v("destroyed")]),e._v("（摧毁成功！）")])]),e._v(" "),_("p",[_("img",{attrs:{src:v(543),alt:"alt"}})])])}),[],!1,null,null,null);t.default=l.exports}}]);