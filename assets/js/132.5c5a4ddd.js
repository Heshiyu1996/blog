(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{672:function(n,t,e){"use strict";e.r(t);var v=e(56),_=Object(v.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"时间复杂度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[n._v("#")]),n._v(" 时间复杂度")]),n._v(" "),e("p",[e("code",[n._v("时间复杂度 = while的循环次数")])]),n._v(" "),e("ul",[e("li",[n._v("算法的基本操作执行次数是问题规模n的某一个函数，记作T(n)；")]),n._v(" "),e("li",[n._v("存在一个辅助函数f(n)，使得T(n)/f(n)当n趋向于无穷大时，他们的值是个不为零的常数，那f(n)就是T(n)的同数量级函数")]),n._v(" "),e("li",[n._v("这个算法的时间复杂度是O(f(n))")])]),n._v(" "),e("blockquote",[e("p",[n._v("同数量级函数有：1、log2n、n、nlog2n、n平方、n三次方、2的n次方、n的阶乘")])]),n._v(" "),e("h3",{attrs:{id:"例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[n._v("#")]),n._v(" 例子")]),n._v(" "),e("p",[n._v("假设共n个数，那下一轮是n/2，再下一轮是n/4（即n/2²）...最后是n/(2的k次方)。其中"),e("code",[n._v("k")]),n._v("是"),e("code",[n._v("循环的次数")]),n._v("\n故，要计算：n/(2的k次方) >= 1")]),n._v(" "),e("p",[n._v("解，得：n = (2的k次方)")]),n._v(" "),e("p",[e("strong",[n._v("k = logn")])])])}),[],!1,null,null,null);t.default=_.exports}}]);