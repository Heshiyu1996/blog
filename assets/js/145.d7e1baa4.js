(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{690:function(s,t,n){"use strict";n.r(t);var a=n(56),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"generator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[s._v("#")]),s._v(" Generator")]),s._v(" "),n("p",[s._v("看一个"),n("code",[s._v("Generator函数")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asyncJob")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aaa'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bbb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'y'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" y2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" y2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" g "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("asyncJob")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Generator函数会返回一个遍历器g")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ① 先输出'aaa'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ② 再输出{ value: 3, done: false }")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value表示：yield语句后面跟的表达式的值，此时y的赋值还未完成！")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// done表示：Generator函数是否执行完毕")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -----此时Generator函数执行到此处，执行权交给外面（第一个yield前的、且其后的表达式并返回）-----")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ccc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ③ 输出'ccc'")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("660")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// next函数把执行权交回里面，继续执行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为往next()传参（只能带一个），上一次“yield后跟的表达式返回值 = 参数（即660）”，给了y")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 完成y的赋值，因为next传参660，所以y = 660")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ④ 先输出'bbb'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ⑤ 再输出'y, 660'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遇到第二个yield，执行yield后跟表达式")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ⑥ 返回对象{ value: 666, done: false }，此时y2的赋值还未完成")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -----此时Generator函数执行到此处，执行权交给外面（第二个yield前的、且其后的表达式并返回）-----")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// next函数把执行权交回里面，继续执行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为往next()传参（只能带一个），上一次“yield后跟的表达式返回值 = 参数（即3）”，给了y")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 完成y的赋值，因为next传参3，所以y2 = 3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ⑦ 最后输出{ value: 3, done: true }")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("aaa\n{ value: 3, done: false }\nccc\nbbb\ny, 660\n{ value: 666, done: false }\n{ value: 3, done: true }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"generator函数能封装异步的原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generator函数能封装异步的原因"}},[s._v("#")]),s._v(" Generator函数能封装异步的原因？")]),s._v(" "),n("p",[s._v("根本原因：Generator函数可以"),n("strong",[s._v("暂停执行")]),s._v("和"),n("strong",[s._v("恢复执行")])]),s._v(" "),n("p",[s._v("两个特性：")]),s._v(" "),n("ul",[n("li",[s._v("函数内外的数据交换\n"),n("ul",[n("li",[s._v("内对外：在外面调用next后，得到返回里的value")]),s._v(" "),n("li",[s._v("外对内：在外面调用next后，传入的参数（只能传一个）")])])]),s._v(" "),n("li",[s._v("错误处理")])]),s._v(" "),n("h3",{attrs:{id:"yield的特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yield的特点"}},[s._v("#")]),s._v(" yield的特点")]),s._v(" "),n("ul",[n("li",[s._v("用来说明"),n("code",[s._v("next函数")]),s._v("返回的"),n("code",[s._v("value值")])]),s._v(" "),n("li",[s._v("每个"),n("code",[s._v("yield")]),s._v("调用后，后面的代码都会停止执行")]),s._v(" "),n("li",[n("code",[s._v("yield")]),s._v("不能穿透函数（即"),n("code",[s._v("不能使用forEach")]),s._v("来遍历声明yield，"),n("code",[s._v("必须用for")]),s._v("！！）")])]),s._v(" "),n("p",[s._v("迭代器对象可以任意具有.next方法的对象")]),s._v(" "),n("h3",{attrs:{id:"generator函数的自动执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generator函数的自动执行"}},[s._v("#")]),s._v(" Generator函数的自动执行")]),s._v(" "),n("p",[s._v("Generator是一个异步操作的容器，它的自动执行需要一种机制（当异步操作有了结果，这种机制就要自动交回执行权），有两种方法：")]),s._v(" "),n("ul",[n("li",[s._v("回调函数。\n"),n("ul",[n("li",[s._v("将异步操作包装成Thunk函数，在回调函数里交回执行权")])])]),s._v(" "),n("li",[s._v("Promise对象。\n"),n("ul",[n("li",[s._v("将异步操作包装成Promise对象，在then方法里交回执行权")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);