(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{716:function(t,e,a){"use strict";a.r(e);var s=a(56),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react事件系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react事件系统"}},[t._v("#")]),t._v(" React事件系统")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#react事件系统"}},[t._v("React事件系统")]),a("ul",[a("li",[a("a",{attrs:{href:"#原理"}},[t._v("原理")])]),a("li",[a("a",{attrs:{href:"#react事件、原生事件的区别"}},[t._v("React事件、原生事件的区别")])]),a("li",[a("a",{attrs:{href:"#参考"}},[t._v("参考")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[a("strong",[t._v("React事件系统")]),t._v(" 采用的是 "),a("strong",[t._v("事件委托")]),t._v(" 的思想。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" React 会在 "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("对象上绑定一个 “统一事件处理程序” ，来监听所有 “React事件”（通过维护一个 “事件映射表” ）\n\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 当 事件 在 具体的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("节点 上 被触发后，会冒泡到 "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("document")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 上绑定的 “统一事件处理程序” 会将 事件 分发到 具体的事件处理函数\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("blockquote",[a("p",[t._v("分发前，React 会对 事件 进行包装：把 “原生DOM事件” 包装成 “合成事件”")])]),t._v(" "),a("h3",{attrs:{id:"合成事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合成事件"}},[t._v("#")]),t._v(" 合成事件")]),t._v(" "),a("p",[a("strong",[t._v("合成事件")]),t._v(" 是 React 对 “原生事件” 的跨浏览器封装。")]),t._v(" "),a("ul",[a("li",[t._v("可以抹平 不同浏览器之间 的差异（是一个 "),a("code",[t._v("SyntheticEvent实例")]),t._v("）")]),t._v(" "),a("li",[t._v("由于合并而来，可能会被重用 "),a("strong",[t._v("（即在事件回调触发完毕后，所有属性都会失效）")])]),t._v(" "),a("li",[t._v("获取底层原生事件（"),a("code",[t._v("nativeEvent")]),t._v("属性）")])]),t._v(" "),a("h2",{attrs:{id:"react事件、原生事件的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react事件、原生事件的区别"}},[t._v("#")]),t._v(" React事件、原生事件的区别")]),t._v(" "),a("h3",{attrs:{id:"触发顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发顺序"}},[t._v("#")]),t._v(" 触发顺序")]),t._v(" "),a("p",[a("strong",[t._v("React事件")]),t._v(" 是在 "),a("code",[t._v("document")]),t._v(" 处统一，所以触发顺序是：")]),t._v(" "),a("p",[t._v("“原生事件” -> “React事件” -> "),a("code",[t._v("document")])]),t._v(" "),a("blockquote",[a("p",[t._v("React事件 默认是在 "),a("strong",[t._v("冒泡阶段")]),t._v(" 触发；如果需要在 "),a("strong",[t._v("捕获阶段")]),t._v(" 触发，可以在 "),a("code",[t._v("事件名+Capture")]),t._v("（如：onClickCapture）")])]),t._v(" "),a("h3",{attrs:{id:"阻止冒泡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻止冒泡"}},[t._v("#")]),t._v(" 阻止冒泡")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("React合成事件")]),t._v(" 通过 "),a("code",[t._v("e.stopPropagation()")]),t._v(" ，可阻止 “React事件” 冒泡 "),a("strong",[t._v("（不会影响到 “原生事件”）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("原生事件")]),t._v(" 通过 "),a("code",[t._v("e.stopPropagation()")]),t._v(" ，可阻止 “原生事件” + “React事件” 冒泡 "),a("strong",[t._v("（因为不会冒泡到 "),a("code",[t._v("document")]),t._v("）")])])])]),t._v(" "),a("h3",{attrs:{id:"nativeevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nativeevent"}},[t._v("#")]),t._v(" nativeEvent")]),t._v(" "),a("p",[a("strong",[t._v("React合成事件")]),t._v(" 可以通过 "),a("code",[t._v("e.nativeEvent")]),t._v(" 获取到 “原生事件”。")]),t._v(" "),a("blockquote",[a("p",[t._v("但 "),a("code",[t._v("e.nativeEvent.stopPropagation()")]),t._v(" 不会阻止 “原生事件”，因为这时候 “原生事件” 早就执行完了。")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://codesandbox.io/s/inspiring-leaf-cdkci?file=/src/App.jsx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Demo"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"syntheticevent实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntheticevent实例"}},[t._v("#")]),t._v(" SyntheticEvent实例")]),t._v(" "),a("p",[t._v("在 合成事件 的事件处理函数内，会传递进一个 "),a("code",[t._v("SyntheticEvent实例")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("兼容所有浏览器")]),t._v(" "),a("li",[t._v("拥有原生事件接口（"),a("code",[t._v("stopPropagation")]),t._v(" 、 "),a("code",[t._v("preventDefault")]),t._v("）")]),t._v(" "),a("li",[t._v("由于合并而来，可能会被重用 "),a("strong",[t._v("（即在事件回调触发完毕后，所有属性都会失效）")])]),t._v(" "),a("li",[t._v("获取底层原生事件（"),a("code",[t._v("nativeEvent")]),t._v("属性）")])]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6903805279483297805",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 合成事件和 DOM 原生事件混用"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);